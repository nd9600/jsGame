{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/@typings/BoardTypes.ts","webpack:///./src/core/board/BoardBuilder.ts","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isPlaceholder.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_curry1.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/always.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_curry2.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_concat.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_arity.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_curryN.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/curryN.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_curry3.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/adjust.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isArray.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isTransformer.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_dispatchable.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_reduced.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xfBase.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xall.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/all.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_map.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isString.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isArrayLike.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xwrap.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/bind.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_reduce.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xmap.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_has.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isArguments.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/keys.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/map.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/path.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/prop.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/pluck.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/reduce.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/ap.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xaperture.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/append.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/values.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/assoc.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isInteger.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/isNil.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/assocPath.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isFunction.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/liftN.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/lift.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/curry.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_makeFlat.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/type.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/clone.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/complement.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/not.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_checkForMethod.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_arrayFromIterator.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_containsWith.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/identical.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_equals.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_functionName.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/equals.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_indexOf.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_contains.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_quote.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_toISOString.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_complement.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_filter.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isObject.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xfilter.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/filter.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/reject.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/toString.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_toString.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/contains.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xreduceBy.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/reduceBy.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/difference.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/update.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xdropLastWhile.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/nth.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/empty.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xfindIndex.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/findIndex.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/flatten.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/forEach.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/has.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_identity.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/identity.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/indexBy.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_assign.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_objectAssign.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/objOf.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_stepCat.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/into.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/invoker.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/isEmpty.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/join.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/prepend.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/test.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/trim.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/zipWith.js","webpack:///./src/core/usefulFunctions.ts","webpack:///./src/core/board/Board.ts","webpack:///./src/core/events/Event.ts","webpack:///./src/core/@typings/PlayerTypes.ts","webpack:///./src/core/factories/BoardFactory.ts","webpack:///./src/core/GameState.ts","webpack:///./src/core/player/Player.ts","webpack:///./src/core/player/PlayerBoard.ts","webpack:///./src/core/factories/GameStateFactory.ts","webpack:///./src/core/events/Game/InitialSetupEvent.ts","webpack:///./src/shell/DefaultGameSetup.ts","webpack:///./src/core/@typings/EventDataTypes.ts","webpack:///./src/shell/EventBus.ts","webpack:///./src/core/events/Movement/MovementEvent.ts","webpack:///./src/core/events/Movement/FailedMovementEvent.ts","webpack:///./src/core/player/PlayerBoardBuilder.ts","webpack:///./src/core/events/Movement/SuccessfulMovementEvent.ts","webpack:///./src/core/board/movement.ts","webpack:///./src/core/events/Command/CommandEvent.ts","webpack:///./src/core/events/Command/EndPointChangeEvent.ts","webpack:///./src/core/player/PlayerBuilder.ts","webpack:///./src/core/events/Command/PlayerNameChangeEvent.ts","webpack:///./src/core/events/Command/SetPlayerBoardStatusToFinishedEvent.ts","webpack:///./src/core/events/Command/StartPointChangeEvent.ts","webpack:///./src/core/events/Command/StatusChangeEvent.ts","webpack:///./src/core/events/Command/ToggleWallEvent.ts","webpack:///./src/core/events/EventRunner.ts","webpack:///./src/core/events/Command/DirectionEvent.ts","webpack:///./src/core/events/Game/InputEvent.ts","webpack:///./src/shell/interaction/UserInput.ts","webpack:///./src/game.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Place","Status","board_BoardBuilder","board","boardOptions","board_Board","id","creatorID","boardData","startPoint","endPoint","status","_isPlaceholder","a","_curry1","fn","f1","arguments","length","apply","this","es_always","val","_curry2","f2","b","_b","_a","_concat","set1","set2","idx","len1","len2","result","_arity","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_curryN","received","combined","argsIdx","left","combinedIdx","es_curryN","_curry3","f3","_c","es_adjust","list","_idx","_list","_isArray","Array","isArray","toString","_isTransformer","obj","_dispatchable","methodNames","xf","args","slice","pop","transducer","_reduced","x","@@transducer/value","@@transducer/reduced","_xfBase","init","_xall_XAll","XAll","f","all","input","es_all","_map","functor","len","_isString","internal_isArrayLike","nodeType","XWrap","acc","_xwrap","es_bind","thisObj","_iterableReduce","iter","step","next","done","_methodReduce","methodName","symIterator","iterator","_reduce","_arrayReduce","reduce","TypeError","_xmap_XMap","XMap","internal_xmap","_has","prop","_isArguments_toString","internal_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","es_keys","keys","nIdx","ks","checkArgsLength","es_map","es_path","paths","es_prop","es_pluck","es_reduce","es_ap","applyF","applyX","ap","es_append","el","es_values","props","vals","es_assoc","_isInteger","Number","isInteger","es_isNil","es_assocPath","assocPath","path","nextObj","arr","concat","_isFunction","es_liftN","arity","lifted","es_lift","es_curry","_makeFlat","recursive","flatt","jlen","j","ilen","es_type","undefined","es_complement","_checkForMethod","methodname","_arrayFromIterator","push","_containsWith","pred","es_identical","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","typeA","equals","constructor","match","String","_functionName","valueOf","message","source","global","ignoreCase","multiline","sticky","unicode","size","entries","values","keysA","extendedStackA","extendedStackB","es_equals","_indexOf","inf","indexOf","_contains","_quote","replace","pad","internal_toISOString","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","_filter","_isObject","_xfilter_XFilter","XFilter","es_filter","filterable","es_reject","es_toString","_toString","seen","recur","y","xs","mapPairs","k","sort","join","test","isNaN","NaN","repr","es_contains","_xreduceBy_XReduceBy","XReduceBy","valueFn","valueAcc","keyFn","inputs","es_reduceBy","elt","es_difference","first","second","out","firstLen","es_update","es_nth","offset","charAt","es_empty","empty","_xfindIndex_XFindIndex","XFindIndex","found","es_findIndex","es_flatten","es_forEach","es_has","_identity","es_indexBy","elem","_assign","assign","target","output","nextKey","es_objOf","es_invoker","method","es_isEmpty","es_join","es_prepend","ws","es_zipWith","trim","rv","Math","min","abyss","usefulFunctions","range","start","end","rangeStart","rangeEnd","max","normalRange","from","v","reverse","makeError","errorHandler","error","assertUnreachable","countNumberOf","element","Board_Board","Board","NotStarted","Board_classCallCheck","getPosition","uncurriedGetPosition","setPosition","uncurriedSetPosition","numberOfRows","numberOfColumns","maxNumberOfWalls","floor","MAX_NUMBER_OF_WALLS_FACTOR","currentNumberOfWalls","Wall","rowSeparator","rowNumbers","columnNumbers","rowsWithRowNumbers","rowNumber","row","rowsAsStrings","boardString","top","JSON","stringify","boardAsString","mergeWithOptions","positionToToggle","PlacingWalls","thingAtPosition","Empty","position","newValue","newRow","newBoard","idCounter","events_Event","Event","data","Event_classCallCheck","type","types","gameState","originalEventType","window","eventBus","dispatchToAllListeners","PlayerBoardStatus","factories_BoardFactory","initialRow","_toConsumableArray","core_GameState","GameState","players","boards","playerBoards","GameState_classCallCheck","statuses","Playing","Finished","playerID","boardID","playerBoardsInternalObject","newPlayer","newBoards","newPlayerBoard","newPlayerBoards","info","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","getCurrentInfo","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","player","playerBoardsForThisPlayer","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Player","score","Player_classCallCheck","player_Player","player_PlayerBoard","PlayerBoard","characterPosition","boardStatus","PlayerBoard_classCallCheck","GameStateFactory_GameStateFactory","GameStateFactory","defaultPosition","newGameStateData","initialPlayers","defaultPlayer","initialBoards","defaultBoard","playersObject","createPlayersObject","boardsObject","createBoardsObject","playerBoardsObject","createPlayerBoardsObject","playerIDString","boardIDString","thisPlayerBoard","Solved","factories_GameStateFactory","Game_InitialSetupEvent","InitialSetupEvent","initialGameSetupData","InitialSetupEvent_classCallCheck","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","dispatch","initialPlayer1","playerIDs","initialPlayerName","initialPlayer2","initialBoardData","makeInitialBoard","initialBoard1","boardIDs","initialBoard2","shell_DefaultGameSetup","Command","Direction","shell_EventBus","EventBus","EventBus_classCallCheck","unCaughtEvents","listeners","default","dispatchedEvent","eventName","callback","newListOfListeners","eventsListOfListeners","event","listener","_this2","eventNames","_this3","addListener","Movement_MovementEvent","MovementEvent","MovementEvent_classCallCheck","MovementEvent_possibleConstructorReturn","Movement_FailedMovementEvent","FailedMovementEvent","FailedMovementEvent_classCallCheck","FailedMovementEvent_possibleConstructorReturn","_get","player_PlayerBoardBuilder","playerBoard","playerBoardOptions","Movement_SuccessfulMovementEvent","SuccessfulMovementEvent","successfulMovementEventData","SuccessfulMovementEvent_classCallCheck","SuccessfulMovementEvent_possibleConstructorReturn","getPlayerBoard","boardIsSolved","newCharacterPosition","replacePlayerBoard","getPositionToMoveIntoFromPossibleList","positionsCouldMoveInto","firstWallInWayOfMovementIndex","possibleWallPosition","getPositionToMoveIntoForBoard","direction","fromPosition","Up","yRange","Down","_yRange","Left","xRange","Right","_xRange","movement","getPositionToMoveInto","Command_CommandEvent","CommandEvent","CommandEvent_classCallCheck","CommandEvent_possibleConstructorReturn","Command_EndPointChangeEvent","EndPointChangeEvent","endPointChangeEventData","EndPointChangeEvent_classCallCheck","EndPointChangeEvent_possibleConstructorReturn","setEndPoint","newEndPoint","replaceBoard","player_PlayerBuilder","playerOptions","Command_PlayerNameChangeEvent","PlayerNameChangeEvent","playerNameChangeEventData","PlayerNameChangeEvent_classCallCheck","PlayerNameChangeEvent_possibleConstructorReturn","oldPlayer","newPlayerName","replacePlayer","Command_SetPlayerBoardStatusToFinishedEvent","SetPlayerBoardStatusToFinishedEvent","setPlayerBoardStatusToFinishedEventData","SetPlayerBoardStatusToFinishedEvent_classCallCheck","SetPlayerBoardStatusToFinishedEvent_possibleConstructorReturn","oldPlayerBoard","newGameState","allPlayerBoardsFinished","opponentID","creatorFinishedBoard","opponentFinishedBoard","addedCreatorScore","console","log","oldCreator","addedOpponentScore","oldOpponent","Command_StartPointChangeEvent","StartPointChangeEvent","startPointChangeEventData","StartPointChangeEvent_classCallCheck","StartPointChangeEvent_possibleConstructorReturn","setStartPoint","newStartPoint","Command_StatusChangeEvent","StatusChangeEvent","statusChangeEventData","StatusChangeEvent_classCallCheck","StatusChangeEvent_possibleConstructorReturn","oldBoard","newStatus","Command_ToggleWallEvent","ToggleWallEvent","toggleWallEventData","ToggleWallEvent_classCallCheck","ToggleWallEvent_possibleConstructorReturn","toggleWallAtPosition","EventRunner","events_EventRunner","handleEvent","handle","makeListOfEvents","listOfEventObjects","Game_InputEvent","Command_DirectionEvent","runEvents","listOfEvents","initialState","createGameState","DirectionEvent","DirectionEvent_classCallCheck","DirectionEvent_possibleConstructorReturn","movementEvents","InputEvent","InputEvent_classCallCheck","InputEvent_possibleConstructorReturn","command","MoveUp","eventData","MoveDown","_eventData","MoveLeft","_eventData2","MoveRight","_eventData3","createEvent","KEYS_TO_COMMANDS","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","UserInput","initialGameState","boardDiv","document","getElementById","innerHTML","addEventListener","_ref","code","inputEventData","inputEvent","loggedEvents","addListenerToMultipleEvents","setup","getInitialPlayerName","getSize","getStartPoint","getEndPoint","getPlayerIDs","getBoardIDs","game_initialGameState"],"mappings":"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","file":"game.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"static/js/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * A list of possible options that can be used to make a new board from an existing one\n */\ninterface BoardOptions {\n    boardData?: BoardType;\n    startPoint?: BoardPosition;\n    endPoint?: BoardPosition;\n    status?: Status;\n}\n\ntype BoardType = Place[][];\n\n/**\n * number of rows X number of columns\n */\ntype twoNumbers = [number, number];\n\nenum Place {\n    Character = \"c\",\n    Wall = \"x\",\n    Empty = \" \",\n    End = \"e\"\n}\n\ninterface BoardPosition {\n    x: number;\n    y: number;\n}\n\nenum Status {\n    NotStarted = \"NotStarted\",\n    PlacingWalls = \"PlacingWalls\",\n    Playing = \"Playing\",\n    Finished = \"Finished\"\n}\n\nexport { Place, BoardType, twoNumbers, BoardPosition, Status, BoardOptions };\n\n","import { BoardOptions } from \"@/core/@typings/BoardTypes\";\nimport Board from \"./Board\";\n\n/**\n * Builds a Board by merging an already-existing Board with any of the possible options\n * You can't change a board's ID after it's been made, so there's no point setting one in BoardOptions\n */\nexport default class BoardBuilder {\n    public static mergeWithOptions(board: Board, boardOptions: BoardOptions): Board {\n        return new Board(\n            board.id,\n            board.creatorID,\n            boardOptions.boardData || board.boardData,\n            boardOptions.startPoint || board.startPoint,\n            boardOptions.endPoint || board.endPoint,\n            boardOptions.status || board.status\n        );\n    }\n}\n","export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport _curry2 from './internal/_curry2';\nimport _curryN from './internal/_curryN';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray';\nimport _isTransformer from './_isTransformer';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall = /*#__PURE__*/_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\nexport default _xall;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xall from './internal/_xall';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n};\nvar keys = /*#__PURE__*/_curry1(_keys);\nexport default keys;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _map from './internal/_map';\nimport _reduce from './internal/_reduce';\nimport _xmap from './internal/_xmap';\nimport curryN from './curryN';\nimport keys from './keys';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _curry2 from './internal/_curry2';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2';\nimport path from './path';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;","import _curry2 from './internal/_curry2';\nimport map from './map';\nimport prop from './prop';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import _curry3 from './internal/_curry3';\nimport _reduce from './internal/_reduce';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport map from './map';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } :\n  // else\n  _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;","import _concat from './_concat';\nimport _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\nexport default _xaperture;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nexport default append;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nexport default values;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1';\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nexport default isNil;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\nimport _isArray from './internal/_isArray';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport isNil from './isNil';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport ap from './ap';\nimport curryN from './curryN';\nimport map from './map';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;","import _curry1 from './internal/_curry1';\nimport liftN from './liftN';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;","import _isArrayLike from './_isArrayLike';\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _clone from './internal/_clone';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;","import lift from './lift';\nimport not from './not';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;","import _curry1 from './internal/_curry1';\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nexport default not;","import _isArray from './_isArray';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nexport default identical;","import _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf';\n\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _filter from './internal/_filter';\nimport _isObject from './internal/_isObject';\nimport _reduce from './internal/_reduce';\nimport _xfilter from './internal/_xfilter';\nimport keys from './keys';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport filter from './filter';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _curry1 from './internal/_curry1';\nimport _toString from './internal/_toString';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _contains from './_contains';\nimport _map from './_map';\nimport _quote from './_quote';\nimport _toISOString from './_toISOString';\nimport keys from '../keys';\nimport reject from '../reject';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nvar contains = /*#__PURE__*/_curry2(_contains);\nexport default contains;","import _curryN from './_curryN';\nimport _has from './_has';\nimport _xfBase from './_xfBase';\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;","import _curryN from './internal/_curryN';\nimport _dispatchable from './internal/_dispatchable';\nimport _has from './internal/_has';\nimport _reduce from './internal/_reduce';\nimport _xreduceBy from './internal/_xreduceBy';\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;","import _curry3 from './internal/_curry3';\nimport adjust from './adjust';\nimport always from './always';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\nexport default update;","import _curry2 from './_curry2';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import _curry1 from './internal/_curry1';\nimport _isArguments from './internal/_isArguments';\nimport _isArray from './internal/_isArray';\nimport _isObject from './internal/_isObject';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() :\n  // else\n  void 0;\n});\nexport default empty;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindIndex from './internal/_xfindIndex';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;","import _curry1 from './internal/_curry1';\nimport _makeFlat from './internal/_makeFlat';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nexport default forEach;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nvar has = /*#__PURE__*/_curry2(_has);\nexport default has;","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1';\nimport _identity from './internal/_identity';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import reduceBy from './reduceBy';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _objectAssign from './_objectAssign';\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _has from './_has';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone';\nimport _curry3 from './internal/_curry3';\nimport _isTransformer from './internal/_isTransformer';\nimport _reduce from './internal/_reduce';\nimport _stepCat from './internal/_stepCat';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import _curry1 from './internal/_curry1';\nimport empty from './empty';\nimport equals from './equals';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;","import invoker from './invoker';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","import _curry1 from './internal/_curry1';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\nvar trim = /*#__PURE__*/_curry1(_trim);\nexport default trim;","import _curry3 from './internal/_curry3';\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nexport default zipWith;","import { IError } from \"@/core/@typings/GeneralTypes\";\nimport * as R from \"ramda\";\n\nfunction range(start: number, end: number): number[] {\n    const rangeStart = Math.min(start, end);\n    const rangeEnd = Math.max(start, end);\n    const normalRange = Array.from({\n            length: (rangeEnd - rangeStart)\n        },\n        (v, k) => k + rangeStart\n    );\n    return end < start\n        ? normalRange.reverse()\n        : normalRange;\n}\n\nfunction makeError(name: string, message: string): IError {\n    return {name, message};\n}\n\nfunction errorHandler(error: IError): void {\n    //  console.log(error);\n     abyss(error);\n}\n\nfunction assertUnreachable(x: never): never {\n    throw new Error(\"Didn't expect to get here\");\n}\n\nfunction abyss(...args: any[]) {\n     return; \n}\n\nfunction countNumberOf<T>(element: T, list: T[]): number {\n    return R.filter(R.equals(element), list).length;\n}\n\nexport default {\n    range, makeError, errorHandler, assertUnreachable, abyss, countNumberOf\n};\n","import { BoardPosition, BoardType, Place, Status } from \"@/core/@typings/BoardTypes\";\nimport BoardBuilder from \"@/core/board/BoardBuilder\";\nimport usefulFunctions from \"@/core/usefulFunctions\";\nimport * as R from \"ramda\";\n\nexport default class Board {\n    public static idCounter: number = 0;\n\n    public readonly numberOfRows: number;\n    public readonly numberOfColumns: number;\n\n    public static MAX_NUMBER_OF_WALLS_FACTOR = 0.5;\n    public readonly maxNumberOfWalls: number;\n    public readonly currentNumberOfWalls: number;\n\n    constructor(\n        public readonly id: number,\n        public readonly creatorID: number,\n        public readonly boardData: BoardType, \n        public readonly startPoint: BoardPosition, \n        public readonly endPoint: BoardPosition,\n        public readonly status: Status = Status.NotStarted\n    ) {\n        this.numberOfRows = this.boardData.length;\n        this.numberOfColumns = R.nth(0, this.boardData)!.length;\n\n        this.maxNumberOfWalls = Math.floor(this.numberOfRows * this.numberOfColumns * Board.MAX_NUMBER_OF_WALLS_FACTOR);\n        this.currentNumberOfWalls = usefulFunctions.countNumberOf(Place.Wall, R.flatten(this.boardData));\n    }\n\n    public boardAsString(rowSeparator: string = \"\\n\"): string {\n        const rowNumbers = usefulFunctions.range(0, this.numberOfRows);\n        const columnNumbers = usefulFunctions.range(0, this.numberOfColumns);\n\n        const rowZipper = (rowNumber: number, row: Place[]) => R.prepend(String(rowNumber), row);\n        const rowsWithRowNumbers = R.zipWith(rowZipper, rowNumbers, this.boardData);\n        const rowsAsStrings = R.map(R.join(\" \"), rowsWithRowNumbers);\n        const boardString = R.join(rowSeparator, rowsAsStrings);\n\n        const top = `  ${R.join(\" \", columnNumbers)}\\n`;\n        return R.join(\"\", [top, boardString]);\n    }\n\n    public getCurrentInfo(): string {\n        return `Board #${this.id}\nStart point: ${JSON.stringify(this.startPoint)}\nEnd point: ${JSON.stringify(this.endPoint)}\nBoard:\n${this.boardAsString()}\\n`;\n    }\n\n    public setStartPoint(startPoint: BoardPosition): Board {\n        return BoardBuilder.mergeWithOptions(this, {startPoint});\n    }\n\n    public setEndPoint(endPoint: BoardPosition): Board {\n        return BoardBuilder.mergeWithOptions(this, {endPoint});\n    }\n\n    public setStatus(status: Status): Board { \n        return BoardBuilder.mergeWithOptions(this, {status});\n    }\n\n    public toggleWallAtPosition(positionToToggle: BoardPosition): Board {\n\n        // you can only toggle somewhere if the board is the PlacingWalls state, and you're trying to toggle somewhere that's empty or already has a wall\n        if (this.status !== Status.PlacingWalls) {\n            return this;\n        }\n\n        // you can't put a wall at the start or end point\n        if (R.equals(positionToToggle, this.startPoint) || R.equals(positionToToggle, this.endPoint)) {\n            return this;\n        }\n\n        const thingAtPosition = this.getPosition(positionToToggle);\n        if (thingAtPosition !== Place.Wall && thingAtPosition !== Place.Empty) {\n            return this;\n        }\n\n        if (thingAtPosition === Place.Wall) {\n            return this.setPosition(positionToToggle, Place.Empty);\n        }\n        \n        // position must be empty now, so we're placing a wall, so we need to check if we can\n        if (this.currentNumberOfWalls < this.maxNumberOfWalls) {\n            return this.setPosition(positionToToggle, Place.Wall);\n        }\n\n        return this;\n    }\n    \n    private uncurriedGetPosition(position: BoardPosition): Place {   \n        const row = R.nth(position.y, this.boardData)!;\n        return R.nth(position.x, row)!;\n    }\n    \n    private uncurriedSetPosition(position: BoardPosition, newValue: Place): Board {    \n        const row = R.nth(position.y, this.boardData)!;\n        const newRow = R.update(position.x, newValue, row);\n        const newBoard = R.update(position.y, newRow, this.boardData);\n        return BoardBuilder.mergeWithOptions(this, {boardData: newBoard});\n    }\n\n    public getPosition: R.CurriedFunction1<BoardPosition, Place> = R.curry(this.uncurriedGetPosition);\n\n    public setPosition: R.CurriedFunction2<BoardPosition, Place, Board> = R.curry(this.uncurriedSetPosition);\n}\n","import { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport GameState from \"@/core/GameState\";\n\n/**\n * Only the subclasses that aren't extended dispatch to the EventBus - e.g. SuccessfulMovementEvents do, MovementEvents don't, and Events don't\n */\nexport default class Event {\n    public type: DispatchedEventNameTypes = \"Event\";\n    public types: DispatchedEventNameTypes[] = [this.type];\n    public data?: any;\n\n    constructor(data?: any) {\n        this.data = data;\n    }\n\n    public handle(gameState: GameState): GameState {\n        return gameState;\n    }\n\n    public static dispatch(types: string[], originalEventType: DispatchedEventNameTypes, data?: any): void {\n        if (window.eventBus) {\n            window.eventBus.dispatchToAllListeners(types, originalEventType, data);\n        }\n    }\n}\n","import { BoardPosition } from \"./BoardTypes\";\n\nenum PlayerBoardStatus {\n    Playing = \"Playing\",\n    Solved = \"Solved\",\n    Finished = \"Finished\",\n}\n\n/**\n * A list of possible options that can be used to make a new player from an existing one\n */\ninterface PlayerOptions {\n    name?: string;\n    score?: number;\n}\n\ninterface PlayerBoardOptions {\n    characterPosition?: BoardPosition;\n    boardStatus?: PlayerBoardStatus;\n}\n\nexport { PlayerBoardStatus, PlayerOptions, PlayerBoardOptions };\n","import { BoardPosition, BoardType, Place, twoNumbers } from \"@/core/@typings/BoardTypes\";\nimport * as R from \"ramda\";\n\nexport default class BoardFactory {\n    public static makeInitialBoard(size: twoNumbers): BoardType {\n        const numberOfRows = size[0];\n        const numberOfColumns = size[1];\n        const initialRow = R.map(R.always(Place.Empty), [...Array(numberOfColumns)]);\n        const initialBoard: BoardType = R.map(R.always(initialRow), [...Array(numberOfRows)]);\n    \n        return initialBoard;\n    }\n}\n","import { Status } from \"@/core/@typings/BoardTypes\";\nimport { Boards, PlayerBoards, Players } from \"@/core/@typings/GameStateTypes\";\nimport Board from \"@/core/board/Board\";\nimport Player from \"@/core/player/Player\";\nimport PlayerBoard from \"@/core/player/PlayerBoard\";\nimport * as R from \"ramda\";\n\nexport default class GameState {\n\n    public readonly status: Status;\n\n    constructor(\n        public readonly players: Players, \n        public readonly boards: Boards, \n        public readonly playerBoards: PlayerBoards\n        ) {        \n        const statuses = R.pluck(\"status\", R.values(boards));\n\n        if (R.contains(Status.NotStarted, statuses)) {\n            this.status = Status.NotStarted;\n        } else if (R.all(R.equals(Status.PlacingWalls), statuses)) {\n            this.status = Status.PlacingWalls;\n        } else if (R.all(R.equals(Status.Playing), statuses)) {\n            this.status = Status.Playing;\n        } else {\n            this.status = Status.Finished;\n        }\n    }\n\n    public getPlayerBoard(playerID: number, boardID: number): PlayerBoard {\n        const playerBoardsInternalObject = R.prop(playerID, this.playerBoards);\n        return R.prop(boardID, playerBoardsInternalObject);\n    }\n\n    public replacePlayer(newPlayer: Player) {\n        const newPlayers = R.assoc(newPlayer.id, newPlayer, this.players);\n        return new GameState(newPlayers, this.boards, this.playerBoards);\n    }\n\n    public replaceBoard(newBoard: Board) {\n        const newBoards = R.assoc(newBoard.id, newBoard, this.boards);\n        return new GameState(this.players, newBoards, this.playerBoards);\n    }\n\n    public replacePlayerBoard(newPlayerBoard: PlayerBoard) {\n        const playerID = newPlayerBoard.playerID;\n        const boardID = newPlayerBoard.boardID;\n        \n        const newPlayerBoards = R.assocPath([playerID, boardID], newPlayerBoard, this.playerBoards);\n        return new GameState(this.players, this.boards, newPlayerBoards);\n    }\n\n    public getCurrentInfo(): string {\n        let info = \"\";\n        for (const board of R.values(this.boards)) {\n            info = `${info}${board.getCurrentInfo()}\\n`;\n        }\n\n        for (const player of R.values(this.players)) {\n            info = `${info}#####\\n${player.getCurrentInfo()}\\n`;\n\n            const playerBoardsForThisPlayer = R.prop(player.id, this.playerBoards);\n            for (const playerBoard of R.values(playerBoardsForThisPlayer)) {\n                info = `${info}${playerBoard.getCurrentInfo()}\\n`;\n            }\n        }\n\n        return info;\n    }\n}\n","export default class Player {\n    public static idCounter: number = 0;\n\n    constructor(\n        public readonly id: number,\n        public readonly name: string,\n        public readonly score: number\n    ) {\n\n    }\n\n    public getCurrentInfo(): string {\n        return `Player #${this.id}, ${this.name}, ${this.score} points\\n`;\n    }\n}\n","import { BoardPosition } from \"@/core/@typings/BoardTypes\";\nimport { PlayerBoardStatus } from \"@/core/@typings/PlayerTypes\";\n\nexport default class PlayerBoard {\n    constructor(\n        public readonly playerID: number,\n        public readonly boardID: number,\n        public readonly characterPosition: BoardPosition,\n        public readonly boardStatus: PlayerBoardStatus,\n    ) {\n    }\n\n    public getCurrentInfo(): string {\n        return `Player #${this.playerID}, Board #${this.boardID}\nCharacter position: ${JSON.stringify(this.characterPosition)}\nBoard Status: ${this.boardStatus}\\n`;\n    }\n}\n","import { PlayerBoardStatus } from \"@/core//@typings/PlayerTypes\";\nimport { Status } from \"@/core/@typings/BoardTypes\";\nimport { Boards, PlayerBoards, Players } from \"@/core/@typings/GameStateTypes\";\nimport Board from \"@/core/board/Board\";\nimport GameState from \"@/core/GameState\";\nimport Player from \"@/core/player/Player\";\nimport PlayerBoard from \"@/core/player/PlayerBoard\";\nimport * as R from \"ramda\";\n\nexport default class GameStateFactory {\n    private static defaultPosition = { x: 0, y: 0 };\n    \n    public static defaultPlayer() {\n        return new Player(Player.idCounter++, \"\", 0);\n    }\n\n    public static defaultBoard(playerID: number) {\n        return new Board(Board.idCounter++, playerID, [[]], GameStateFactory.defaultPosition, GameStateFactory.defaultPosition);\n    }\n\n    public static createGameState(newGameStateData?: {players?: Player[]; boards?: Board[]; }): GameState {\n        const initialPlayers = newGameStateData && newGameStateData.players \n            ? newGameStateData.players \n            : [this.defaultPlayer()];\n        const initialBoards = newGameStateData && newGameStateData.boards\n            ? newGameStateData.boards\n            : [this.defaultBoard(initialPlayers[0].id)];\n\n        const playersObject = GameStateFactory.createPlayersObject(initialPlayers);\n        const boardsObject = GameStateFactory.createBoardsObject(initialBoards);\n        const playerBoardsObject = GameStateFactory.createPlayerBoardsObject(playersObject, boardsObject);\n\n        return new GameState(playersObject, boardsObject, playerBoardsObject);\n    }\n\n    public static createPlayerBoardsObject(players: Players, boards: Boards): PlayerBoards {\n        const playerBoards: PlayerBoards = {};\n\n        for (const playerIDString of Object.keys(players)) {\n            const playerID = Number(playerIDString);\n            const playerBoardsForThisPlayer: {\n                [boardID: number]: PlayerBoard\n            } = {};\n    \n            for (const boardIDString of Object.keys(boards)) {\n                const boardID = Number(boardIDString);\n                const board = R.prop(boardID, boards);\n                const thisPlayerBoard = new PlayerBoard(\n                    playerID,\n                    boardID,\n                    board.startPoint,\n                    (board.status === Status.Finished) ? PlayerBoardStatus.Solved : PlayerBoardStatus.Playing\n                );\n                playerBoardsForThisPlayer[boardID] = thisPlayerBoard;\n            }\n            playerBoards[playerID] = playerBoardsForThisPlayer;\n        }\n    \n        return playerBoards;\n    }\n\n    public static createBoardsObject(boards: Board[]): Boards {\n        return R.indexBy((board: Board) => board.id, boards);\n    }\n\n    public static createPlayersObject(players: Player[]): Players {\n        return R.indexBy((player: Player) => player.id, players);\n    }\n}\n","import { InitialGameSetupData } from \"@/core/@typings/EventDataTypes\";\nimport { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport Board from \"@/core/board/Board\";\nimport Event from \"@/core/events/Event\";\nimport BoardFactory from \"@/core/factories/BoardFactory\";\nimport GameStateFactory from \"@/core/factories/GameStateFactory\";\nimport GameState from \"@/core/GameState\";\nimport Player from \"@/core/player/Player\";\nimport * as R from \"ramda\";\n\nexport default class InitialSetupEvent extends Event {\n    public type: DispatchedEventNameTypes = \"InitialSetupEvent\";\n    public data: InitialGameSetupData;\n\n    constructor(initialGameSetupData: InitialGameSetupData) {\n        super();\n        this.types = R.append(this.type, this.types);\n        this.data = initialGameSetupData;\n        Event.dispatch(this.types, this.type, this.data);\n    }\n\n    public handle(gameState: GameState): GameState {\n        const initialPlayer1 = new Player(\n            this.data.playerIDs[0],\n            this.data.initialPlayerName,\n            0\n        );\n        const initialPlayer2 = new Player(\n            this.data.playerIDs[1],\n            this.data.initialPlayerName,\n            0\n        );\n\n        const initialBoardData = BoardFactory.makeInitialBoard(this.data.size);\n        const initialBoard1 = new Board(\n            this.data.boardIDs[0],\n            initialPlayer1.id, \n            initialBoardData, \n            this.data.startPoint, \n            this.data.endPoint\n        );\n        const initialBoard2 = new Board(\n            this.data.boardIDs[1],\n            initialPlayer2.id, \n            initialBoardData, \n            this.data.startPoint, \n            this.data.endPoint\n        );\n\n        const players = GameStateFactory.createPlayersObject([initialPlayer1, initialPlayer2]);\n        const boards = GameStateFactory.createBoardsObject([initialBoard1, initialBoard2]);\n        const playerBoards = GameStateFactory.createPlayerBoardsObject(players, boards);\n        return new GameState(players, boards, playerBoards);\n    }\n}\n","import { twoNumbers, BoardPosition } from \"@/core/@typings/BoardTypes\";\nimport { SetupInterface } from \"@/shell/SetupInterface\";\n\nexport default class DefaultGameSetup implements SetupInterface {\n    public getInitialPlayerName(): string {\n        return \"\";\n    }\n\n    public getSize(): twoNumbers {\n        return [4, 4];\n    }\n\n    public getStartPoint(): BoardPosition {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    public getEndPoint(): BoardPosition {\n        return {\n            x: 3,\n            y: 3\n        };\n    }\n\n    public getPlayerIDs(): [number, number] {\n        return [0, 1];\n    }\n    \n    public getBoardIDs(): [number, number] {\n        return [0, 1];\n    }\n}\n","import { BoardPosition, Status, twoNumbers } from \"@/core/@typings/BoardTypes\";\nimport Player from \"@/core/player/Player\";\n\nenum Command {\n    MoveUp = \"MoveUp\",\n    MoveDown = \"MoveDown\",\n    MoveLeft = \"MoveLeft\",\n    MoveRight = \"MoveRight\"\n}\nenum Direction {\n    Up = \"Up\",\n    Down = \"Down\",\n    Left = \"Left\",\n    Right = \"Right\"\n}\n\ninterface InitialGameSetupData {\n    initialPlayerName: string;\n    size: twoNumbers;\n    startPoint: BoardPosition;\n    endPoint: BoardPosition;\n    playerIDs: [number, number];\n    boardIDs: [number, number];\n}\n\ninterface InputEventData {\n    command: Command;\n    player: Player;\n}\n\ninterface DirectionEventData {\n    direction: Direction;\n    player: Player;\n}\n\ninterface SuccessfulMovementEventData {\n    playerID: number;\n    boardID: number;\n    newCharacterPosition: BoardPosition;\n}\n\ninterface PlayerNameChangeEventData {\n    playerID: number;\n    newPlayerName: string;\n}\n\ninterface StatusChangeEventData {\n    boardID: number;\n    newStatus: Status;\n}\n\ninterface SetPlayerBoardStatusToFinishedEventData {\n    playerID: number;\n    boardID: number;\n}\n\ninterface StartPointChangeEventData {\n    boardID: number;\n    newStartPoint: BoardPosition;\n}\n\ninterface EndPointChangeEventData {\n    boardID: number;\n    newEndPoint: BoardPosition;\n}\n\ninterface ToggleWallEventData {\n    boardID: number;\n    positionToToggle: BoardPosition;\n}\n\nexport { Command, Direction, SuccessfulMovementEventData, InitialGameSetupData, InputEventData, DirectionEventData, PlayerNameChangeEventData, StatusChangeEventData, SetPlayerBoardStatusToFinishedEventData, StartPointChangeEventData, EndPointChangeEventData, ToggleWallEventData };\n\n","import { DispatchedEvent, DispatchedEventNameTypes, EventCallback } from \"@/core/@typings/EventTypes\";\nimport * as R from \"ramda\";\n\ndeclare global {\n    interface Window { \n        eventBus: EventBus; \n        loggedEvents: DispatchedEvent[];\n    }\n}\n\nexport default class EventBus {\n    private unCaughtEvents: DispatchedEvent[] = [];\n\n    private listeners: { \n        [key: string]: EventCallback[] \n    } = {\n        default: [\n            (dispatchedEvent: DispatchedEvent) => { \n                this.unCaughtEvents = R.append(dispatchedEvent, this.unCaughtEvents);\n             }\n        ]\n    };\n\n    public addListener(eventName: string, callback: EventCallback): void {\n        let newListOfListeners: EventCallback[];\n        if (R.has(eventName, this.listeners)) {\n            const eventsListOfListeners: EventCallback[] = this.listeners[eventName];\n            newListOfListeners = R.append(callback, eventsListOfListeners);\n        } else {\n            newListOfListeners = [callback];\n        }\n        this.listeners = R.assoc(eventName, newListOfListeners, this.listeners);\n    }\n\n    /**\n     * Removes a specific listener from an event. We need to call callback.toString() to check if two different functions are equal, because checking R.equal(function1, function2) didn't work for some reason\n     * @param event the name of the event\n     * @param callback the callback function to remove\n     */\n    public removeListener(event: string, callback: EventCallback): void {\n        let newListOfListeners: EventCallback[];\n        if (R.has(event, this.listeners)) {\n            const eventsListOfListeners: EventCallback[] = this.listeners[event];\n            newListOfListeners = R.reject(\n                R.complement(R.equals(callback.toString())), \n                eventsListOfListeners\n            );\n        } else {\n            newListOfListeners = [];\n        }\n        this.listeners = R.assoc(event, newListOfListeners, this.listeners);\n    }\n\n    private dispatch(event: string, dispatchedEvent: DispatchedEvent): void {\n        if (R.has(event, this.listeners)) {\n            const eventsListOfListeners: EventCallback[] = this.listeners[event];\n            const callListener = (listener: EventCallback) => {\n                listener(dispatchedEvent);\n            };\n            R.forEach(callListener, eventsListOfListeners);\n        } else {\n            this.unCaughtEvents = R.append(dispatchedEvent, this.unCaughtEvents);\n        }\n    }\n\n    //////////\n    // other functions that are just useful to have\n    //////////\n\n    public getListeners() {\n        return this.listeners;\n    }\n\n    public getUncaughtEvents() {\n        return this.unCaughtEvents;\n    }\n\n    public dispatchToAllListeners(types: string[], originalEventType: DispatchedEventNameTypes, data?: any): void {\n        if (window.eventBus) {\n            // we need to cast originalEventType to the any-type so TS doesn't complain\n            R.forEach(\n                (type: string) => {\n                    this.dispatch(type, {type: originalEventType as any, data});\n                },\n            types);\n        }\n    }\n\n    public addListenerToMultipleEvents(eventNames: string[], callback: EventCallback): void {\n        const addIndividualListener = (eventName: string) => {\n            this.addListener(eventName, callback);\n        };\n        R.forEach(addIndividualListener, eventNames);\n    }\n}\n","import { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport Event from \"@/core/events/Event\";\nimport * as R from \"ramda\";\n\nexport default class MovementEvent extends Event {\n    public type: DispatchedEventNameTypes = \"MovementEvent\";\n\n    constructor(data?: any) {\n        super(data);\n        this.types = R.append(this.type, this.types);\n    }\n}\n","import { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport { IError } from \"@/core/@typings/GeneralTypes\";\nimport Event from \"@/core/events/Event\";\nimport MovementEvent from \"@/core/events/Movement/MovementEvent\";\nimport GameState from \"@/core/GameState\";\nimport usefulFunctions from \"@/core/usefulFunctions\";\nimport * as R from \"ramda\";\n\nexport default class FailedMovementEvent extends MovementEvent {\n\n    public type: DispatchedEventNameTypes = \"FailedMovementEvent\";\n    public data: IError;\n\n    constructor(error: IError) {\n        super();\n        this.types = R.append(this.type, this.types);\n        this.data = error;\n        Event.dispatch(this.types, this.type, this.data);\n    }\n\npublic handle(gameState: GameState): GameState {\n    usefulFunctions.errorHandler(this.data);\n    return super.handle(gameState);\n}\n}\n","import { PlayerBoardOptions } from \"@/core/@typings/PlayerTypes\";\nimport PlayerBoard from \"./PlayerBoard\";\n\nexport default class PlayerBoardBuilder {\n    public static mergeWithOptions(playerBoard: PlayerBoard, playerBoardOptions: PlayerBoardOptions): PlayerBoard {\n        return new PlayerBoard(\n            playerBoard.playerID,\n            playerBoard.boardID,\n            playerBoardOptions.characterPosition || playerBoard.characterPosition,\n            playerBoardOptions.boardStatus || playerBoard.boardStatus\n        );\n    }\n}\n","import { SuccessfulMovementEventData } from \"@/core/@typings/EventDataTypes\";\nimport { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport { PlayerBoardStatus } from \"@/core/@typings/PlayerTypes\";\nimport Event from \"@/core/events/Event\";\nimport MovementEvent from \"@/core/events/Movement/MovementEvent\";\nimport GameState from \"@/core/GameState\";\nimport PlayerBoardBuilder from \"@/core/player/PlayerBoardBuilder\";\nimport * as R from \"ramda\";\n\nexport default class SuccessfulMovementEvent extends MovementEvent {\n    public type: DispatchedEventNameTypes = \"SuccessfulMovementEvent\";\n    public data: SuccessfulMovementEventData;\n    \n    constructor(successfulMovementEventData: SuccessfulMovementEventData) {\n        super();\n        this.types = R.append(this.type, this.types);\n        this.data = successfulMovementEventData;\n        Event.dispatch(this.types, this.type, this.data);\n    }\n\n    public handle(gameState: GameState) {\n        const playerBoard = gameState.getPlayerBoard(this.data.playerID, this.data.boardID);\n        const board = gameState.boards[this.data.boardID];\n        const boardIsSolved = R.equals(this.data.newCharacterPosition, board.endPoint);\n\n        return gameState.replacePlayerBoard(PlayerBoardBuilder.mergeWithOptions(playerBoard, {\n            characterPosition: this.data.newCharacterPosition,\n            boardStatus: (boardIsSolved ? PlayerBoardStatus.Solved : PlayerBoardStatus.Playing)\n        }));\n    }\n}\n","import { BoardPosition, Place } from \"@/core/@typings/BoardTypes\";\nimport { Direction } from \"@/core/@typings/EventDataTypes\";\nimport Board from \"@/core/board/Board\";\nimport FailedMovementEvent from \"@/core/events/Movement/FailedMovementEvent\";\nimport MovementEvent from \"@/core/events/Movement/MovementEvent\";\nimport SuccessfulMovementEvent from \"@/core/events/Movement/SuccessfulMovementEvent\";\nimport GameState from \"@/core/GameState\";\nimport Player from \"@/core/player/Player\";\nimport PlayerBoard from \"@/core/player/PlayerBoard\";\nimport usefulFunctions from \"@/core/usefulFunctions\";\nimport * as R from \"ramda\";\n\n/**\n * Returns the position that could be moved in to (if any), given a list of possible positions\n * @param positionsCouldMoveInto BoardPosition[] - a list of the possible squares that could be moved in to\n * @param board Board\n * @param playerBoard PlayerBoard\n */\nfunction getPositionToMoveIntoFromPossibleList(positionsCouldMoveInto: BoardPosition[], board: Board, playerBoard: PlayerBoard): MovementEvent {\n    if (R.isEmpty(positionsCouldMoveInto)) {\n        return new FailedMovementEvent(usefulFunctions.makeError(\"MovementError\", \"no positions to move in to\"));\n    }\n\n    const firstWallInWayOfMovementIndex = R.findIndex((possibleWallPosition) => R.equals(\n        board.getPosition(possibleWallPosition),\n        Place.Wall),\n    positionsCouldMoveInto);\n    \n    let newCharacterPosition: BoardPosition;\n    if (firstWallInWayOfMovementIndex === 0) {\n        return new FailedMovementEvent(usefulFunctions.makeError(\"MovementError\", \"wall immediately beside\"));\n\n    // no wall was found, so we can move to the top of the board\n    } else if (firstWallInWayOfMovementIndex === -1) {\n        newCharacterPosition = positionsCouldMoveInto[positionsCouldMoveInto.length - 1];\n    } else {\n        newCharacterPosition = positionsCouldMoveInto[firstWallInWayOfMovementIndex - 1];\n    }\n\n    return new SuccessfulMovementEvent({boardID: board.id, playerID: playerBoard.playerID, newCharacterPosition});\n}\n\n/**\n * Finds last square to move to, makes a list of squares from fromPosition to that square, and finds the last empty square in that list\n * @param board Board\n * @param player Player\n * @param direction Direction\n * @param fromPosition BoardPosition\n */\nfunction getPositionToMoveInto(gameState: GameState, player: Player, direction: Direction): MovementEvent[] {\n    const boards = R.values(gameState.boards);\n    return R.map((board) => {\n        const playerBoard = gameState.getPlayerBoard(player.id, board.id);\n        return getPositionToMoveIntoForBoard(board, playerBoard, direction);\n    },\n        boards\n    );\n}\n\n/**\n * Finds last square to move to, makes a list of squares from fromPosition to that square, and finds the last empty square in that list\n * @param board Board\n * @param direction Direction\n * @param playerBoard PlayerBoard\n * @param fromPosition BoardPosition\n */\nfunction getPositionToMoveIntoForBoard(board: Board, playerBoard: PlayerBoard, direction: Direction): MovementEvent {\n    const fromPosition = playerBoard.characterPosition;\n    switch (direction) {\n        case Direction.Up: {\n\n            // ###########################################\n            // todo: test these FailedMovementEvents\n            // ###########################################\n            if (fromPosition.y === 0) {\n                return new FailedMovementEvent(usefulFunctions.makeError(\"MovementError\", \"at top of board\"));\n            }\n\n            // range that decrements doesn't include the starting number i.e. the position, which is what we want\n            const yRange = usefulFunctions.range(fromPosition.y, 0);\n            const squaresCouldMoveInto = R.map(\n                (y): BoardPosition => R.assoc(\"y\", y, fromPosition),\n                yRange\n            );\n\n            return getPositionToMoveIntoFromPossibleList(squaresCouldMoveInto, board, playerBoard);\n        } case Direction.Down: {\n            if (fromPosition.y + 1 === board.numberOfRows) {\n                return new FailedMovementEvent(usefulFunctions.makeError(\"MovementError\", \"at bottom of board\"));\n            }\n\n            // range that increments does include the starting number i.e. the position, which isn't what we want, so we have to increment by 1 to get rid of it\n            const yRange = usefulFunctions.range(fromPosition.y + 1, board.numberOfRows);\n            const positionsCouldMoveInto = R.map(\n                (y): BoardPosition => R.assoc(\"y\", y, fromPosition),\n                yRange\n            );\n\n            return getPositionToMoveIntoFromPossibleList(positionsCouldMoveInto, board, playerBoard);\n        } case Direction.Left: {\n            if (fromPosition.x === 0) {\n                return new FailedMovementEvent(usefulFunctions.makeError(\"MovementError\", \"at left of board\"));\n            }\n            const xRange = usefulFunctions.range(fromPosition.x, 0);\n            const positionsCouldMoveInto = R.map(\n                (x): BoardPosition => R.assoc(\"x\", x, fromPosition),\n                xRange\n            );\n\n            return getPositionToMoveIntoFromPossibleList(positionsCouldMoveInto, board, playerBoard);\n        }\n        case Direction.Right: {\n            if (fromPosition.x + 1 === board.numberOfColumns) {\n                return new FailedMovementEvent(usefulFunctions.makeError(\"MovementError\", \"at right of board\"));\n            }\n            const xRange = usefulFunctions.range(fromPosition.x + 1, board.numberOfColumns);\n            const positionsCouldMoveInto = R.map(\n                (x): BoardPosition => R.assoc(\"x\", x, fromPosition),\n                xRange\n            );\n\n            return getPositionToMoveIntoFromPossibleList(positionsCouldMoveInto, board, playerBoard);\n        }\n    }\n    return usefulFunctions.assertUnreachable(direction);\n}\n\nexport default {getPositionToMoveInto, getPositionToMoveIntoForBoard};\n","import { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport Event from \"@/core/events/Event\";\nimport * as R from \"ramda\";\n\nexport default class CommandEvent extends Event {\n    \n    public type: DispatchedEventNameTypes = \"CommandEvent\";\n\n    constructor(data?: any) {\n        super(data);\n        this.types = R.append(this.type, this.types);\n    }\n}\n","import { EndPointChangeEventData } from \"@/core/@typings/EventDataTypes\";\nimport { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport BoardBuilder from \"@/core/board/BoardBuilder\";\nimport CommandEvent from \"@/core/events/Command/CommandEvent\";\nimport Event from \"@/core/events/Event\";\nimport GameState from \"@/core/GameState\";\nimport * as R from \"ramda\";\n\nexport default class EndPointChangeEvent extends CommandEvent {\n    public type: DispatchedEventNameTypes = \"EndPointChangeEvent\";\n    public data: EndPointChangeEventData;\n\n    constructor(endPointChangeEventData: EndPointChangeEventData) {\n        super(endPointChangeEventData);\n        this.types = R.append(this.type, this.types);\n        this.data = endPointChangeEventData;\n        Event.dispatch(this.types, this.type, this.data);\n    }\n\n    public handle(gameState: GameState): GameState {\n        const oldBoard = gameState.boards[this.data.boardID];\n        const newBoard = oldBoard.setEndPoint(this.data.newEndPoint);\n        return gameState.replaceBoard(newBoard);\n    }\n}\n","import { PlayerOptions } from \"@/core/@typings/PlayerTypes\";\nimport Player from \"./Player\";\n\n/**\n * Builds a Player by merging an already-existing Player with any of the possible options\n * You can't change a player's ID after it's been made, so there's no point setting one in PlayerOptions\n */\nexport default class PlayerBuilder {\n    public static mergeWithOptions(player: Player, playerOptions: PlayerOptions): Player {\n        return new Player(\n            player.id,\n            playerOptions.name || player.name,\n            playerOptions.score || player.score\n        );\n    }\n}\n","import { PlayerNameChangeEventData } from \"@/core/@typings/EventDataTypes\";\nimport { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport CommandEvent from \"@/core/events/Command/CommandEvent\";\nimport Event from \"@/core/events/Event\";\nimport GameState from \"@/core/GameState\";\nimport PlayerBuilder from \"@/core/player/PlayerBuilder\";\nimport * as R from \"ramda\";\n\nexport default class PlayerNameChangeEvent extends CommandEvent {\n    public type: DispatchedEventNameTypes = \"PlayerNameChangeEvent\";\n    public data: PlayerNameChangeEventData;\n\n    constructor(playerNameChangeEventData: PlayerNameChangeEventData) {\n        super(playerNameChangeEventData);\n        this.types = R.append(this.type, this.types);\n        this.data = playerNameChangeEventData;\n        Event.dispatch(this.types, this.type, this.data);\n    }\n\n    public handle(gameState: GameState): GameState {\n        const oldPlayer = gameState.players[this.data.playerID];\n        const newPlayer = PlayerBuilder.mergeWithOptions(oldPlayer, {name: this.data.newPlayerName});\n        return gameState.replacePlayer(newPlayer);\n    }\n}\n","import { SetPlayerBoardStatusToFinishedEventData } from \"@/core/@typings/EventDataTypes\";\nimport { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport { Players } from \"@/core/@typings/GameStateTypes\";\nimport { PlayerBoardStatus } from \"@/core/@typings/PlayerTypes\";\nimport CommandEvent from \"@/core/events/Command/CommandEvent\";\nimport Event from \"@/core/events/Event\";\nimport GameState from \"@/core/GameState\";\nimport PlayerBoardBuilder from \"@/core/player/PlayerBoardBuilder\";\nimport * as R from \"ramda\";\nimport PlayerBuilder from \"@/core/player/PlayerBuilder\";\n\nexport default class SetPlayerBoardStatusToFinishedEvent extends CommandEvent {\n    public type: DispatchedEventNameTypes = \"SetPlayerBoardStatusToFinishedEvent\";\n    public data: SetPlayerBoardStatusToFinishedEventData;\n\n    constructor(setPlayerBoardStatusToFinishedEventData: SetPlayerBoardStatusToFinishedEventData) {\n        super(setPlayerBoardStatusToFinishedEventData);\n        this.types = R.append(this.type, this.types);\n        this.data = setPlayerBoardStatusToFinishedEventData;\n        Event.dispatch(this.types, this.type, this.data);\n    }\n\n    public handle(gameState: GameState): GameState {\n        const oldPlayerBoard = gameState.getPlayerBoard(this.data.playerID, this.data.boardID);\n        let newGameState = gameState.replacePlayerBoard(PlayerBoardBuilder.mergeWithOptions(oldPlayerBoard, {\n            boardStatus: PlayerBoardStatus.Finished\n        }));\n\n        /*\n         When all PlayerBoards are Finished, if\n            - you complete your maze & opponent doesn't, you get 10 points\n            - both complete a maze, both get 5 points\n            - neither complete maze, 0 points\n            - you don't complete your maze & opponent does, they get 20 points\n        */\n\n        let allPlayerBoardsFinished = true;\n        for (const player of R.values(newGameState.players)) {\n            const playerBoardsForThisPlayer = R.prop(player.id, newGameState.playerBoards);\n            for (const playerBoard of R.values(playerBoardsForThisPlayer)) {\n                if (playerBoard.boardStatus !== PlayerBoardStatus.Finished) {\n                    allPlayerBoardsFinished = false;\n                }\n            }\n        }\n\n        if (allPlayerBoardsFinished) {\n            const playerIDs = R.keys(newGameState.players);\n\n            // get players\n            // for each board\n                // get if creator finished board and if opponent finished board\n                    // if creator completed maze & opponent didn't, creator gets 10 points, opponent 0\n                        // replace creator in players with incremented score\n            // etc\n\n            for (const board of R.values(newGameState.boards)) {\n                const creatorID = board.creatorID;\n                const opponentID = Number(R.difference(playerIDs, [String(creatorID)])[0]);\n\n                // throw new Error(JSON.stringify(newGameState.playerBoards));\n\n                const creatorFinishedBoard = newGameState.getPlayerBoard(creatorID, board.id).characterPosition === board.endPoint;\n                const opponentFinishedBoard = newGameState.getPlayerBoard(opponentID, board.id).characterPosition === board.endPoint;\n\n                const addedCreatorScore = creatorFinishedBoard && (! opponentFinishedBoard)\n                    ? 10\n                    : creatorFinishedBoard && opponentFinishedBoard\n                        ? 5\n                        : 0;\n\n                if (addedCreatorScore > 0) {\n                    console.log(`hello creator ${creatorID}`);\n\n                    const oldCreator = R.prop(creatorID, newGameState.players);\n                    newGameState = newGameState.replacePlayer(PlayerBuilder.mergeWithOptions(oldCreator, {\n                        score: oldCreator.score + addedCreatorScore\n                    }));\n                }\n\n                const addedOpponentScore = creatorFinishedBoard && opponentFinishedBoard\n                    ? 5\n                    : (! creatorFinishedBoard) && opponentFinishedBoard\n                        ? 20\n                        : 0;\n\n                if (addedOpponentScore > 0) {\n                    console.log(`hello opponent ${opponentID}`);\n\n                    const oldOpponent = R.prop(opponentID, newGameState.players);\n                    newGameState = newGameState.replacePlayer(PlayerBuilder.mergeWithOptions(oldOpponent, {\n                        score: oldOpponent.score + addedOpponentScore\n                    }));\n                }\n            }\n        }\n\n        return newGameState;\n    }\n}\n","import { StartPointChangeEventData } from \"@/core/@typings/EventDataTypes\";\nimport { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport BoardBuilder from \"@/core/board/BoardBuilder\";\nimport CommandEvent from \"@/core/events/Command/CommandEvent\";\nimport Event from \"@/core/events/Event\";\nimport GameState from \"@/core/GameState\";\nimport * as R from \"ramda\";\nimport PlayerBoardBuilder from \"@/core/player/PlayerBoardBuilder\";\n\nexport default class StartPointChangeEvent extends CommandEvent {\n    public type: DispatchedEventNameTypes = \"StartPointChangeEvent\";\n    public data: StartPointChangeEventData;\n\n    constructor(startPointChangeEventData: StartPointChangeEventData) {\n        super(startPointChangeEventData);\n        this.types = R.append(this.type, this.types);\n        this.data = startPointChangeEventData;\n        Event.dispatch(this.types, this.type, this.data);\n    }\n\n    public handle(gameState: GameState): GameState {\n        const oldBoard = gameState.boards[this.data.boardID];\n        const newBoard = oldBoard.setStartPoint(this.data.newStartPoint);\n        let newGameState = gameState\n            .replaceBoard(newBoard);\n\n        // we need to change the playerBoards' first character position's too\n        for (const player of R.values(newGameState.players)) {\n            const playerBoardsForThisPlayer = R.prop(player.id, newGameState.playerBoards);\n            for (const playerBoard of R.values(playerBoardsForThisPlayer)) {\n                if (R.equals(playerBoard.boardID, this.data.boardID)) {\n                    newGameState = newGameState.replacePlayerBoard(PlayerBoardBuilder.mergeWithOptions(playerBoard, {\n                        characterPosition: this.data.newStartPoint\n                    }));\n                }\n            }\n        }\n\n        return newGameState;\n    }\n}\n","import { StatusChangeEventData } from \"@/core/@typings/EventDataTypes\";\nimport { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport BoardBuilder from \"@/core/board/BoardBuilder\";\nimport CommandEvent from \"@/core/events/Command/CommandEvent\";\nimport Event from \"@/core/events/Event\";\nimport GameState from \"@/core/GameState\";\nimport * as R from \"ramda\";\n\nexport default class StatusChangeEvent extends CommandEvent {\n    public type: DispatchedEventNameTypes = \"StatusChangeEvent\";\n    public data: StatusChangeEventData;\n\n    constructor(statusChangeEventData: StatusChangeEventData) {\n        super(statusChangeEventData);\n        this.types = R.append(this.type, this.types);\n        this.data = statusChangeEventData;\n        Event.dispatch(this.types, this.type, this.data);\n    }\n\n    public handle(gameState: GameState): GameState {\n        const oldBoard = gameState.boards[this.data.boardID];\n        const newBoard = BoardBuilder.mergeWithOptions(oldBoard, {status: this.data.newStatus});\n        return gameState.replaceBoard(newBoard);\n    }\n}\n","import { ToggleWallEventData } from \"@/core/@typings/EventDataTypes\";\nimport { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport CommandEvent from \"@/core/events/Command/CommandEvent\";\nimport Event from \"@/core/events/Event\";\nimport GameState from \"@/core/GameState\";\nimport * as R from \"ramda\";\n\nexport default class ToggleWallEvent extends CommandEvent {\n    public type: DispatchedEventNameTypes = \"ToggleWallEvent\";\n    public data: ToggleWallEventData;\n\n    constructor(toggleWallEventData: ToggleWallEventData) {\n        super(toggleWallEventData);\n        this.types = R.append(this.type, this.types);\n        this.data = toggleWallEventData;\n        Event.dispatch(this.types, this.type, this.data);\n    }\n\n    public handle(gameState: GameState): GameState {\n        const oldBoard = gameState.boards[this.data.boardID];\n        const newBoard = oldBoard.toggleWallAtPosition(this.data.positionToToggle);\n        return gameState.replaceBoard(newBoard);\n    }\n}\n","import { DispatchedEvent } from \"@/core/@typings/EventTypes\";\nimport CommandEvent from \"@/core/events/Command/CommandEvent\";\nimport DirectionEvent from \"@/core/events/Command/DirectionEvent\";\nimport EndPointChangeEvent from \"@/core/events/Command/EndPointChangeEvent\";\nimport PlayerNameChangeEvent from \"@/core/events/Command/PlayerNameChangeEvent\";\nimport SetPlayerBoardStatusToFinishedEvent from \"@/core/events/Command/SetPlayerBoardStatusToFinishedEvent\";\nimport StartPointChangeEvent from \"@/core/events/Command/StartPointChangeEvent\";\nimport StatusChangeEvent from \"@/core/events/Command/StatusChangeEvent\";\nimport ToggleWallEvent from \"@/core/events/Command/ToggleWallEvent\";\nimport Event from \"@/core/events/Event\";\nimport InitialSetupEvent from \"@/core/events/Game/InitialSetupEvent\";\nimport InputEvent from \"@/core/events/Game/InputEvent\";\nimport FailedMovementEvent from \"@/core/events/Movement/FailedMovementEvent\";\nimport MovementEvent from \"@/core/events/Movement/MovementEvent\";\nimport SuccessfulMovementEvent from \"@/core/events/Movement/SuccessfulMovementEvent\";\nimport GameStateFactory from \"@/core/factories/GameStateFactory\";\nimport GameState from \"@/core/GameState\";\nimport * as R from \"ramda\";\n\nexport default class EventRunner {\n    private static handleEvent = (gameState: GameState, event: Event): GameState => event.handle(gameState);\n\n    public static makeListOfEvents = (listOfEventObjects: DispatchedEvent[]): Event[] => {\n        const makeEventFromDispatchedEvent = (dispatchedEvent: DispatchedEvent): Event => {\n            switch (dispatchedEvent.type) {\n                case \"InitialSetupEvent\": {\n                    return new InitialSetupEvent(dispatchedEvent.data);\n                } case \"InputEvent\": {\n                    return new InputEvent(dispatchedEvent.data);\n                } case \"FailedMovementEvent\": {\n                    return new FailedMovementEvent(dispatchedEvent.data);\n                } case \"MovementEvent\": {\n                    return new MovementEvent(dispatchedEvent.data);\n                } case \"SuccessfulMovementEvent\": {\n                    return new SuccessfulMovementEvent(dispatchedEvent.data);\n                } case \"CommandEvent\": {\n                    return new CommandEvent(dispatchedEvent.data);\n                } case \"DirectionEvent\": {\n                    return new DirectionEvent(dispatchedEvent.data);\n                } case \"PlayerNameChangeEvent\": {\n                    return new PlayerNameChangeEvent(dispatchedEvent.data);\n                } case \"StatusChangeEvent\": {\n                    return new StatusChangeEvent(dispatchedEvent.data);\n                } case \"SetPlayerBoardStatusToFinishedEvent\": {\n                    return new SetPlayerBoardStatusToFinishedEvent(dispatchedEvent.data);\n                } case \"StartPointChangeEvent\": {\n                    return new StartPointChangeEvent(dispatchedEvent.data);\n                } case \"EndPointChangeEvent\": {\n                    return new EndPointChangeEvent(dispatchedEvent.data);\n                } case \"ToggleWallEvent\": {\n                    return new ToggleWallEvent(dispatchedEvent.data);\n                } \n                // default: {\n                //     return new Event(dispatchedEvent.data);\n                // }\n            }\n        };\n        return R.map(makeEventFromDispatchedEvent, listOfEventObjects);\n    }\n\n    public static runEvents = (listOfEvents: Event[], initialState?: GameState): GameState => {\n        initialState = initialState || GameStateFactory.createGameState();\n        const finalState = R.reduce(EventRunner.handleEvent, initialState, listOfEvents);\n        return finalState;\n    }\n}\n","import { DirectionEventData } from \"@/core/@typings/EventDataTypes\";\nimport { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport movementFunctions from \"@/core/board/movement\";\nimport CommandEvent from \"@/core/events/Command/CommandEvent\";\nimport Event from \"@/core/events/Event\";\nimport EventRunner from \"@/core/events/EventRunner\";\nimport GameState from \"@/core/GameState\";\nimport * as R from \"ramda\";\n\nexport default class DirectionEvent extends CommandEvent {\n    public type: DispatchedEventNameTypes = \"DirectionEvent\";\n    public data: DirectionEventData;\n\n    constructor(data: DirectionEventData) {\n        super(data);\n        this.types = R.append(this.type, this.types);\n        this.data = data;\n        Event.dispatch(this.types, this.type, this.data);\n    }\n\n    /**\n     * getPositionToMoveInto() returns multiple events, so we need to run them with the EventRunner here\n     * @param gameState \n     */\n    public handle(gameState: GameState): GameState {\n        const movementEvents = movementFunctions.getPositionToMoveInto(gameState, this.data.player, this.data.direction);\n        return EventRunner.runEvents(movementEvents, gameState);\n    }\n}\n","import { Command, Direction, InputEventData } from \"@/core/@typings/EventDataTypes\";\nimport { DispatchedEventNameTypes } from \"@/core/@typings/EventTypes\";\nimport DirectionEvent from \"@/core/events/Command/DirectionEvent\";\nimport Event from \"@/core/events/Event\";\nimport GameState from \"@/core/GameState\";\nimport * as R from \"ramda\";\n\nexport default class InputEvent extends Event {\n    public type: DispatchedEventNameTypes = \"InputEvent\";\n    public data: InputEventData;\n\n    constructor(data: InputEventData) {\n        super();\n        this.types = R.append(this.type, this.types);\n        this.data = data;\n        Event.dispatch(this.types, this.type, this.data);\n    }\n\n    public createEvent(): Event {\n        switch (this.data.command) {\n            case (Command.MoveUp): {\n                const eventData = { \n                    direction: Direction.Up, \n                    player: this.data.player\n                };\n                return new DirectionEvent(eventData);\n            }\n            case (Command.MoveDown): {\n                const eventData = { \n                    direction: Direction.Down, \n                    player: this.data.player\n                };\n                return new DirectionEvent(eventData);\n            }\n            case (Command.MoveLeft): {\n                const eventData = { \n                    direction: Direction.Left, \n                    player: this.data.player\n                };\n                return new DirectionEvent(eventData);\n            }\n            case (Command.MoveRight): {\n                const eventData = { \n                    direction: Direction.Right, \n                    player: this.data.player\n                };\n                return new DirectionEvent(eventData);\n            }\n            default: {\n                return new Event();\n            }\n        }\n    }\n\n    public handle(gameState: GameState) {\n        const event = this.createEvent();\n        return event.handle(gameState);\n    }\n}\n","import { Command, InputEventData } from \"@/core/@typings/EventDataTypes\";\nimport InputEvent from \"@/core/events/Game/InputEvent\";\nimport GameState from \"@/core/GameState\";\nimport Player from \"@/core/player/Player\";\nimport * as R from \"ramda\";\n\nconst KEYS_TO_COMMANDS: { [index: string]: Command } = {\n    ArrowUp: Command.MoveUp,\n    ArrowDown: Command.MoveDown,\n    ArrowLeft: Command.MoveLeft,\n    ArrowRight: Command.MoveRight\n};\n\nconst handleUserInput = (initialGameState: GameState, player: Player): void => {\n    const boardDiv = document.getElementById(\"board\")!;\n    let board = R.values(initialGameState.boards)[0];\n    boardDiv.innerHTML = `<pre>${board.boardAsString()}</pre>`;\n\n    let gameState: GameState = initialGameState;\n    window.addEventListener(\"keyup\", ({code}) => {\n        if (KEYS_TO_COMMANDS.hasOwnProperty(code)) {\n            const inputEventData: InputEventData = {\n                command: KEYS_TO_COMMANDS[code],\n                player\n            };\n\n            const inputEvent = new InputEvent(inputEventData);\n            gameState = inputEvent.handle(gameState);\n            board = R.values(gameState.boards)[0];\n\n            // console.log(code);\n            console.log(\"gameState: \", gameState);\n            // console.log(R.values(gameState.boards));\n            // console.log(R.values(gameState.boards)[0]);\n            // console.log(\"loggedEvents\", window.loggedEvents);\n            console.log(\"\");\n            boardDiv.innerHTML = `<pre>${board.boardAsString()}</pre>`;\n        }\n    });\n};\n\nexport default {handleUserInput};\n","import { DispatchedEvent, EventCallback } from \"@/core/@typings/EventTypes\";\nimport InitialSetupEvent from \"@/core/events/Game/InitialSetupEvent\";\nimport GameStateFactory from \"@/core/factories/GameStateFactory\";\nimport DefaultGameSetup from \"@/shell/DefaultGameSetup\";\nimport EventBus from \"@/shell/EventBus\";\nimport UserInput from \"@/shell/interaction/UserInput\";\nimport * as R from \"ramda\";\n\nwindow.eventBus = new EventBus();\nwindow.loggedEvents  = [];\nconst eventLogger: EventCallback = (dispatchedEvent: DispatchedEvent): void => {\n    window.loggedEvents.push(dispatchedEvent);\n    console.log(\"event, data: \", dispatchedEvent.data);\n};\nwindow.eventBus.addListenerToMultipleEvents([\"InitialSetupEvent\", \"InputEvent\"], eventLogger);\n\nconst setup = new DefaultGameSetup();\nconst [initialPlayerName, size, startPoint, endPoint, playerIDs, boardIDs] = [setup.getInitialPlayerName(), setup.getSize(), setup.getStartPoint(), setup.getEndPoint(), setup.getPlayerIDs(), setup.getBoardIDs()];\n\nconst initialGameSetupData = {initialPlayerName, size, startPoint, endPoint, playerIDs, boardIDs};\nconst initialSetupEvent = new InitialSetupEvent(initialGameSetupData);\nconst initialGameState = initialSetupEvent.handle(GameStateFactory.createGameState());\n\nconst player = R.values(initialGameState.players)[0];\n\nUserInput.handleUserInput(initialGameState, player);\n"],"sourceRoot":""}