{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isPlaceholder.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_curry1.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/always.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_curry2.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_concat.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_arity.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_curryN.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/curryN.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_curry3.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/adjust.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isArray.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isTransformer.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_dispatchable.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_reduced.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xfBase.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_map.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isString.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isArrayLike.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xwrap.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/bind.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_reduce.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xmap.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_has.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isArguments.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/keys.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/map.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xaperture.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/assoc.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isInteger.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isFunction.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/liftN.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/curry.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/type.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_arrayFromIterator.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_containsWith.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/identical.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_equals.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_functionName.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/equals.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_indexOf.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_contains.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_quote.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_toISOString.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_complement.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_filter.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_isObject.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xfilter.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/filter.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/reject.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/toString.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_toString.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/update.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xdropLastWhile.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/nth.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_xfindIndex.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/findIndex.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_identity.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_assign.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_objectAssign.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/objOf.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/internal/_stepCat.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/into.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/invoker.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/join.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/length.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/merge.js","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/test.js","webpack:///./src/core/myTypes.ts","webpack:///./node_modules/.registry.npmjs.org/ramda/0.25.0/node_modules/ramda/es/trim.js","webpack:///./src/core/usefulFunctions.ts","webpack:///./src/core/events/Event.ts","webpack:///./src/core/events/Movement/MovementEvent.ts","webpack:///./src/core/events/Movement/FailedMovementEvent.ts","webpack:///./src/core/GameState.ts","webpack:///./src/core/events/Movement/SuccessfulMovementEvent.ts","webpack:///./src/core/board/movement.ts","webpack:///./src/core/board/boardFunctions.ts","webpack:///./src/core/board/Board.ts","webpack:///./src/shell/TestSetup.ts","webpack:///./src/core/events/InputEvent.ts","webpack:///./src/game.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_isPlaceholder","a","_curry1","fn","f1","arguments","length","apply","this","es_always","val","_curry2","f2","b","_b","_a","_concat","set1","set2","idx","len1","len2","result","_arity","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_curryN","received","combined","argsIdx","left","combinedIdx","es_curryN","_curry3","f3","_c","es_adjust","list","_idx","_list","_isArray","Array","isArray","toString","_isTransformer","obj","_dispatchable","methodNames","xf","args","slice","pop","transducer","_reduced","x","@@transducer/value","@@transducer/reduced","_xfBase","init","_map","functor","len","_isString","internal_isArrayLike","nodeType","XWrap","f","acc","_xwrap","es_bind","thisObj","_iterableReduce","iter","step","next","done","_methodReduce","methodName","symIterator","iterator","_reduce","_arrayReduce","reduce","TypeError","_xmap_XMap","XMap","input","internal_xmap","_has","prop","_isArguments_toString","internal_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","es_keys","keys","nIdx","ks","checkArgsLength","es_map","es_assoc","Number","isInteger","_isFunction","es_curry","es_type","undefined","_arrayFromIterator","push","_containsWith","pred","es_identical","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","typeA","equals","constructor","match","String","_functionName","valueOf","message","source","global","ignoreCase","multiline","sticky","unicode","size","entries","concat","values","keysA","extendedStackA","extendedStackB","es_equals","_indexOf","inf","indexOf","_contains","_quote","replace","pad","internal_toISOString","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","_filter","_isObject","_xfilter_XFilter","XFilter","es_filter","filterable","es_reject","es_toString","_toString","seen","recur","y","xs","mapPairs","k","sort","join","test","isNaN","NaN","repr","es_update","es_nth","offset","charAt","_xfindIndex_XFindIndex","XFindIndex","found","es_findIndex","_identity","_assign","assign","target","output","nextKey","es_objOf","es_invoker","arity","method","es_join","es_merge","Place","Direction","ws","trim","usefulFunctions","range","start","end","rangeStart","Math","min","rangeEnd","max","normalRange","from","v","reverse","makeError","errorHandler","error","console","log","assertUnreachable","abyss","Event","_classCallCheck","type","state","MovementEvent","MovementEvent_classCallCheck","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","events_Event","FailedMovementEvent","FailedMovementEvent_classCallCheck","FailedMovementEvent_possibleConstructorReturn","data","Movement_MovementEvent","_get","GameState","board","GameState_classCallCheck","setInitialPositions","startPoint","endPoint","setPosition","Character","End","SuccessfulMovementEvent","boardID","newCharacterPosition","SuccessfulMovementEvent_classCallCheck","SuccessfulMovementEvent_possibleConstructorReturn","newBoard","characterPosition","Empty","setCharacterPosition","core_GameState","getPositionToMoveIntoFromPossibleList","positionsCouldMoveInto","firstWallInWayOfMovementIndex","possibleWallPosition","getPosition","Wall","positionToMoveInto","Movement_FailedMovementEvent","Movement_SuccessfulMovementEvent","id","getPositionToMoveInto","gameState","direction","fromPosition","Up","yRange","Down","numberOfRows","_yRange","Left","xRange","Right","numberOfColumns","_xRange","boardFunctions","makeInitialBoard","initialRow","_toConsumableArray","initialBoard","row","newRow","move","handle","Board_Board","Board","Board_classCallCheck","getBoard","boardData","boardAsString","separator","rowsJoined","uncurriedGetPosition","position","isPositionOnBoard","uncurriedSetPosition","newValue","yIsOnBoard","xIsOnBoard","idCounter","boardSolved","board_Board","getStartPoint","getEndPoint","InputEvent","InputEvent_classCallCheck","InputEvent_possibleConstructorReturn","KEYS","setup","shell_TestSetup","getSize","game_size","game_characterPosition","game_endPoint","game_board","game_gameState","boardDiv","document","getElementById","innerHTML","window","addEventListener","_ref2","code","KEYS_TO_DIRECTIONS","inputEvent","events_InputEvent"],"mappings":"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","file":"game.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"static/js/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport _curry2 from './internal/_curry2';\nimport _curryN from './internal/_curryN';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray';\nimport _isTransformer from './_isTransformer';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n};\nvar keys = /*#__PURE__*/_curry1(_keys);\nexport default keys;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _map from './internal/_map';\nimport _reduce from './internal/_reduce';\nimport _xmap from './internal/_xmap';\nimport curryN from './curryN';\nimport keys from './keys';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _concat from './_concat';\nimport _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\nexport default _xaperture;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport ap from './ap';\nimport curryN from './curryN';\nimport map from './map';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;","import _curry1 from './internal/_curry1';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nexport default identical;","import _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf';\n\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _filter from './internal/_filter';\nimport _isObject from './internal/_isObject';\nimport _reduce from './internal/_reduce';\nimport _xfilter from './internal/_xfilter';\nimport keys from './keys';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport filter from './filter';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _curry1 from './internal/_curry1';\nimport _toString from './internal/_toString';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _contains from './_contains';\nimport _map from './_map';\nimport _quote from './_quote';\nimport _toISOString from './_toISOString';\nimport keys from '../keys';\nimport reject from '../reject';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry3 from './internal/_curry3';\nimport adjust from './adjust';\nimport always from './always';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\nexport default update;","import _curry2 from './_curry2';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindIndex from './internal/_xfindIndex';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;","export default function _identity(x) {\n  return x;\n}","import _objectAssign from './_objectAssign';\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _has from './_has';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone';\nimport _curry3 from './internal/_curry3';\nimport _isTransformer from './internal/_isTransformer';\nimport _reduce from './internal/_reduce';\nimport _stepCat from './internal/_stepCat';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import invoker from './invoker';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;","import _curry1 from './internal/_curry1';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;","import _assign from './internal/_assign';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\nexport default merge;","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","enum Place {\n    Character = \"c\",\n    Wall = \"x\",\n    Empty = \" \",\n    End = \"end\"\n}\n\ntype BoardType = Place[][];\ntype twoNumbers = [number, number];\n\nenum Direction {Up, Down, Left, Right}\n\ninterface Position {\n    x: number;\n    y: number;\n}\n\ninterface SuccessfulMovementEventData {\n    boardID: number;\n    newCharacterPosition: Position;\n}\n\ninterface IError {\n    name: string;\n    message: string;\n}\n\nexport {Place, BoardType, twoNumbers, Direction, Position, SuccessfulMovementEventData, IError};\n","import _curry1 from './internal/_curry1';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\nvar trim = /*#__PURE__*/_curry1(_trim);\nexport default trim;","import {IError} from \"@/core/myTypes\";\n\nconst range = (start: number, end: number): number[] => {\n    const rangeStart = Math.min(start, end);\n    const rangeEnd = Math.max(start, end);\n    const normalRange = Array.from({\n            length: (rangeEnd - rangeStart)\n        },\n        (v, k) => k + rangeStart\n    );\n    return end < start\n        ? normalRange.reverse()\n        : normalRange;\n};\n\nconst makeError = (name: string, message: string): IError => ({name, message});\nconst errorHandler = (error: IError): void => console.log(error);\n\nconst assertUnreachable = (x: never): never => {\n    throw new Error(\"Didn't expect to get here\");\n};\n\nconst abyss = (...args: any[]) => { return; };\n\nexport default {\n    range, makeError, errorHandler, assertUnreachable, abyss\n};\n","import GameState from \"@/core/GameState\";\n\nexport default abstract class Event {\n    public type = \"Event\";\n    public data: any;\n    \n    public handle(state: GameState): GameState {\n        return state;\n    }\n}\n\n","import Event from \"@/core/events/Event\";\n\nexport default class MovementEvent extends Event {\n    public type = \"MovementEvent\";\n}\n","import usefulFunctions from \"@/core/usefulFunctions\";\nimport { IError } from \"@/core/myTypes\";\nimport MovementEvent from \"@/core/events/Movement/MovementEvent\";\nimport GameState from \"@/core/GameState\";\n\nexport default class FailedMovementEvent extends MovementEvent {\n\n    public type = \"FailedMovementEvent\";\n    public data: IError;\n\n    constructor(error: IError) {\n        super();\n        this.data = error;\n    }\n\npublic handle(state: GameState): GameState {\n    usefulFunctions.errorHandler(this.data);\n    return super.handle(state);\n}\n}\n","import { Position, Place } from \"@/core/myTypes\";\nimport Board from \"@/core/board/Board\";\n\nexport default class GameState {\n    public board: Board;\n\n    constructor(board: Board) {\n        this.board = board;\n    }\n    \n    public setInitialPositions = (startPoint: Position, endPoint: Position): Board => {\n        return this.board\n            .setPosition(startPoint, Place.Character)    \n            .setPosition(endPoint, Place.End);\n    }\n}\n","import { Place, Position, SuccessfulMovementEventData } from \"@/core/myTypes\";\nimport MovementEvent from \"@/core/events/Movement/MovementEvent\";\nimport GameState from \"@/core/GameState\";\n\nexport default class SuccessfulMovementEvent extends MovementEvent {\n\n    public type = \"SuccessfulMovementEvent\";\n    public data: SuccessfulMovementEventData;\n    \n    constructor(boardID: number, newCharacterPosition: Position) {\n        super();\n        this.data = {boardID, newCharacterPosition};\n    }\n\n    public handle(state: GameState) {\n        const newBoard = state.board\n            .setPosition(state.board.characterPosition, Place.Empty)\n            .setPosition(this.data.newCharacterPosition, Place.Character)\n            .setCharacterPosition(this.data.newCharacterPosition);\n\n        return new GameState(newBoard);\n    }\n}\n","import * as R from \"ramda\";\nimport {Direction, IError, Position, Place} from \"@/core/myTypes\";\nimport usefulFunctions from \"@/core/usefulFunctions\";\nimport MovementEvent from \"@/core/events/Movement/MovementEvent\";\nimport FailedMovementEvent from \"@/core/events/Movement/FailedMovementEvent\";\nimport SuccessfulMovementEvent from \"@/core/events/Movement/SuccessfulMovementEvent\";\nimport Board from \"@/core/board/Board\";\nimport GameState from \"@/core/GameState\";\n\n/**\n * Returns the position that could be moved in to (if any), given a list of possible positions\n * @param positionsCouldMoveInto Position[] - a list of the possible squares that could be moved in to\n * @param board Board\n */\nfunction getPositionToMoveIntoFromPossibleList(positionsCouldMoveInto: Position[], board: Board): MovementEvent {\n    const firstWallInWayOfMovementIndex = R.findIndex((possibleWallPosition) => R.equals(\n        board.getPosition(possibleWallPosition),\n        Place.Wall),\n    positionsCouldMoveInto);\n    \n    let positionToMoveInto: Position;\n    if (firstWallInWayOfMovementIndex === 0) {\n        return new FailedMovementEvent(usefulFunctions.makeError(\"MovementError\", \"wall immediately beside\"));\n\n    // no wall was found, so we can move to the top of the board\n    } else if (firstWallInWayOfMovementIndex === -1) {\n        positionToMoveInto = positionsCouldMoveInto[positionsCouldMoveInto.length - 1];\n    } else {\n        positionToMoveInto = positionsCouldMoveInto[firstWallInWayOfMovementIndex - 1];\n    }\n\n    return new SuccessfulMovementEvent(board.id, positionToMoveInto);\n}\n\n/**\n * Finds last square to move to, makes a list of squares from fromPosition to that square, and finds the last empty square in that list\n * @param board Board\n * @param direction Direction\n * @param fromPosition Position\n */\nfunction getPositionToMoveInto(gameState: GameState, direction: Direction): MovementEvent {\n    const {board} = gameState;\n    const fromPosition = board.characterPosition;\n    switch (direction) {\n        case Direction.Up: {\n            if (fromPosition.y === 0) {\n                return new FailedMovementEvent(usefulFunctions.makeError(\"MovementError\", \"at top of board\"));\n            }\n\n            // range that decrements doesn't include the starting number i.e. the position, which is what we want\n            const yRange = usefulFunctions.range(fromPosition.y, 0);\n            const squaresCouldMoveInto = R.map(\n                (y): Position => R.assoc(\"y\", y, fromPosition),\n                yRange\n            );\n\n            return getPositionToMoveIntoFromPossibleList(squaresCouldMoveInto, board);\n        } case Direction.Down: {\n            if (fromPosition.y + 1 === board.numberOfRows) {\n                return new FailedMovementEvent(usefulFunctions.makeError(\"MovementError\", \"at bottom of board\"));\n            }\n\n            // range that increments does include the starting number i.e. the position, which isn't what we want, so we have to increment by 1 to get rid of it\n            const yRange = usefulFunctions.range(fromPosition.y + 1, board.numberOfRows);\n            const positionsCouldMoveInto = R.map(\n                (y): Position => R.assoc(\"y\", y, fromPosition),\n                yRange\n            );\n\n            return getPositionToMoveIntoFromPossibleList(positionsCouldMoveInto, board);\n        } case Direction.Left: {\n            if (fromPosition.x === 0) {\n                return new FailedMovementEvent(usefulFunctions.makeError(\"MovementError\", \"at left of board\"));\n            }\n            const xRange = usefulFunctions.range(fromPosition.x, 0);\n            const positionsCouldMoveInto = R.map(\n                (x): Position => R.assoc(\"x\", x, fromPosition),\n                xRange\n            );\n\n            return getPositionToMoveIntoFromPossibleList(positionsCouldMoveInto, board);\n        }\n        case Direction.Right: {\n            if (fromPosition.x + 1 === board.numberOfColumns) {\n                return new FailedMovementEvent(usefulFunctions.makeError(\"MovementError\", \"at right of board\"));\n            }\n            const xRange = usefulFunctions.range(fromPosition.x + 1, board.numberOfColumns);\n            const positionsCouldMoveInto = R.map(\n                (x): Position => R.assoc(\"x\", x, fromPosition),\n                xRange\n            );\n\n            return getPositionToMoveIntoFromPossibleList(positionsCouldMoveInto, board);\n        }\n    }\n    return usefulFunctions.assertUnreachable(direction);\n}\n\nconst move = (state: GameState, direction: Direction): GameState => {\n    const movementEvent = getPositionToMoveInto(state, direction);\n    return movementEvent.handle(state);\n};\n\nexport default {\n    move, getPositionToMoveInto\n};\n","import * as R from \"ramda\";\nimport { Place, twoNumbers, BoardType, Position } from \"@/core/myTypes\";\nimport movementFunctions from \"@/core/board/movement\";\nfunction makeInitialBoard(size: twoNumbers, startPoint: Position, endPoint: Position): BoardType {\n    const initialRow = R.map(R.always(Place.Empty), [...Array(size[0])]);\n    const initialBoard: BoardType = R.map(R.always(initialRow), [...Array(size[1])]);\n\n    let row = R.nth(startPoint.y, initialBoard)!;\n    let newRow = R.update(startPoint.x, Place.Character, row);\n    let newBoard = R.update(startPoint.y, newRow, initialBoard);\n\n    row = R.nth(endPoint.y, newBoard)!;\n    newRow = R.update(endPoint.x, Place.End, row);\n    newBoard = R.update(endPoint.y, newRow, newBoard);\n\n    return newBoard;\n}\n\nexport default R.merge({makeInitialBoard}, movementFunctions);\n","import * as R from \"ramda\";\nimport { Place, Position, BoardType } from \"@/core/myTypes\";\n\nexport default class Board {\n    private static idCounter: number = 0;\n    public id: number;\n    private boardData: BoardType;\n\n    public characterPosition: Position;\n    public endPoint: Position;\n    public numberOfRows: number;\n    public numberOfColumns: number;\n\n    public boardSolved: boolean; \n\n    constructor(board: BoardType, characterPosition: Position, endPoint: Position) {\n        this.id = Board.idCounter++;\n        this.boardData = board;\n        this.characterPosition = characterPosition;\n        this.endPoint = endPoint;\n\n        this.numberOfRows = this.boardData.length;\n        this.numberOfColumns = R.nth(0, this.boardData)!.length;\n        this.boardSolved = R.equals(this.characterPosition, this.endPoint);\n    }\n\n    public getBoard = () => this.boardData;\n\n    public boardAsString = (separator: string = \"\\n\"): string => {\n        const rowsJoined = R.map(R.join(\" \", ), this.boardData);\n        return R.join(separator, rowsJoined);\n    }\n\n    public setCharacterPosition = (newCharacterPosition: Position): Board => new Board(this.boardData, newCharacterPosition, this.endPoint);\n    \n    private uncurriedGetPosition = (position: Position): Place => {\n        this.isPositionOnBoard(position);\n    \n        const row = R.nth(position.y, this.boardData)!;\n        return R.nth(position.x, row)!;\n    }\n    \n    private uncurriedSetPosition = (position: Position, newValue: Place): Board => {\n        this.isPositionOnBoard(position);\n    \n        const row = R.nth(position.y, this.boardData)!;\n        const newRow = R.update(position.x, newValue, row);\n        const newBoard = R.update(position.y, newRow, this.boardData);\n        return new Board(newBoard, this.characterPosition, this.endPoint);\n    }\n\n    public getPosition: R.CurriedFunction1<Position, Place> = R.curry( this.uncurriedGetPosition);\n\n    public setPosition: R.CurriedFunction2<Position, Place, Board> = R.curry(this.uncurriedSetPosition);\n\n    private isPositionOnBoard = (position: Position): void => {\n        const yIsOnBoard = (0 <= position.y) && (position.y <= this.boardData.length);\n        const xIsOnBoard = (0 <= position.x) && (position.x <= R.nth(0, this.boardData)!.length);\n        if (!(yIsOnBoard && xIsOnBoard)) {\n            throw new Error(`position ${position} is off the board`);\n        }\n    }\n}\n","import {SetupInterface} from \"@/shell/SetupInterface\";\nimport {twoNumbers, Position, Place} from \"@/core/myTypes\";\nimport GameState from \"@/core/GameState\";\nimport Board from \"@/core/board/Board\";\n\nexport default class TestSetup implements SetupInterface {\n    public getSize(): twoNumbers {\n        return [10, 10];\n    }\n\n    public getStartPoint(): Position {\n        return {\n            x: 0,\n            y: 9\n        };\n    }\n\n    public getEndPoint(): Position {\n        return {\n            x: 9,\n            y: 9\n        };\n    }\n\n    public getEmptyGameState(): GameState {\n        return new GameState( \n            new Board([[Place.Character]], this.getStartPoint(), this.getEndPoint())\n        );\n    }\n}\n","import { Direction } from \"@/core/myTypes\";\nimport Event from \"@/core/events/Event\";\nimport GameState from \"@/core/GameState\";\nimport boardFunctions from \"@/core/board/boardFunctions\";\n\nexport default class InputEvent extends Event {\n\n    public type = \"InputEvent\";\n    public data: Direction;\n\n    constructor(direction: Direction) {\n        super();\n        this.data = direction;\n    }\n\n    public handle(gameState: GameState) {\n        const direction = this.data;\n        return boardFunctions.move(gameState, direction);\n    }\n}\n","import boardFunctions from \"@/core/board/boardFunctions\";\nimport TestSetup from \"@/shell/TestSetup\";\nimport {Direction} from \"@/core/myTypes\";\nimport Board from \"@/core/board/Board\";\nimport GameState from \"@/core/GameState\";\nimport InputEvent from \"@/core/events/InputEvent\";\n\nconst KEYS = {\n    up: \"ArrowUp\",\n    down: \"ArrowDown\",\n    left: \"ArrowLeft\",\n    right: \"ArrowRight\"\n};\n\nconst setup = new TestSetup();\nconst [size, characterPosition, endPoint] = [setup.getSize(), setup.getStartPoint(), setup.getEndPoint()];\n\nconst board = new Board(boardFunctions.makeInitialBoard(size, characterPosition, endPoint), characterPosition, endPoint);\n\nlet gameState = new GameState(\n    board\n);\n\nconst boardDiv = document.getElementById(\"board\")!;\n\nboardDiv.innerHTML = `<pre>${gameState.board.boardAsString()}</pre>`;\n\nwindow.addEventListener(\"keyup\", ({code}) => {\n    const KEYS_TO_DIRECTIONS: any = {};\n    KEYS_TO_DIRECTIONS[KEYS.up] = Direction.Up;\n    KEYS_TO_DIRECTIONS[KEYS.down] = Direction.Down;\n    KEYS_TO_DIRECTIONS[KEYS.left] = Direction.Left;\n    KEYS_TO_DIRECTIONS[KEYS.right] = Direction.Right;\n\n    const inputEvent = new InputEvent(KEYS_TO_DIRECTIONS[code]);\n    gameState = inputEvent.handle(gameState);\n\n    console.log(code);\n    console.log(gameState.board.getBoard());\n    boardDiv.innerHTML = `<pre>${gameState.board.boardAsString()}</pre>`;\n});\n"],"sourceRoot":""}